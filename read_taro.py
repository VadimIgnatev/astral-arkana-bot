import gspread
from oauth2client.service_account import ServiceAccountCredentials
import random

# ==== –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google –¢–∞–±–ª–∏—Ü–µ ====
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(creds)

spreadsheet = client.open("TaroBot_Cards")
sheet = spreadsheet.sheet1
data = sheet.get_all_records()

# ==== –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: —Å–ª—É—á–∞–π–Ω—ã–µ –∫–∞—Ä—Ç—ã ====
def get_random_cards(data, count=3):
    grouped = {}
    for card in data:
        grouped.setdefault(card['–ê—Ä–∫–∞–Ω'], []).append(card)

    selected_names = random.sample(list(grouped.keys()), count)
    selected_cards = [random.choice(grouped[name]) for name in selected_names]
    return selected_cards

# ==== –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ ====
def get_spread_text(data, spread_type="classic", cards=None):
    spreads = {
        "classic": {
            "name": "üîÆ –†–∞—Å–∫–ª–∞–¥: –ü—Ä–æ—à–ª–æ–µ ‚Äî –ù–∞—Å—Ç–æ—è—â–µ–µ ‚Äî –ë—É–¥—É—â–µ–µ",
            "count": 3,
            "positions": ["–ü—Ä–æ—à–ª–æ–µ", "–ù–∞—Å—Ç–æ—è—â–µ–µ", "–ë—É–¥—É—â–µ–µ"]
        },
        "yes_no": {
            "name": "‚öñÔ∏è –û—Ç–≤–µ—Ç –î–∞ / –ù–µ—Ç",
            "count": 1,
            "positions": ["–û—Ç–≤–µ—Ç"]
        },
        "love": {
            "name": "‚ù§Ô∏è –†–∞—Å–∫–ª–∞–¥ –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            "count": 3,
            "positions": ["–í—ã", "–ü–∞—Ä—Ç–Ω—ë—Ä", "–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª"]
        },
        "money": {
            "name": "üí∞ –†–∞—Å–∫–ª–∞–¥ –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å—ã",
            "count": 3,
            "positions": ["–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø—Ä–æ—à–ª–æ–µ", "–ù–∞—Å—Ç–æ—è—â–µ–µ", "–ë—É–¥—É—â–µ–µ"]
        },
        "day": {
            "name": "‚òÄÔ∏è –†–∞—Å–∫–ª–∞–¥ –¥–Ω—è",
            "count": 3,
            "positions": ["–°–æ–≤–µ—Ç –¥–Ω—è", "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å", "–û–ø–∞—Å–Ω–æ—Å—Ç—å"]
        }
    }

    spread = spreads[spread_type]
    if cards is None:
        cards = get_random_cards(data, spread["count"])

    result = [f"*{spread['name']}*"]
    for pos, card in zip(spread["positions"], cards):
        result.append(f"\n*{pos}:* _{card['–ê—Ä–∫–∞–Ω']} ({card['–ü–æ–ª–æ–∂–µ–Ω–∏–µ']})_")
        result.append(f"_–°–º—ã—Å–ª:_ {card['–û–±—â–∏–π —Å–º—ã—Å–ª']}")
        result.append(f"_–°–æ–≤–µ—Ç:_ {card['–°–æ–≤–µ—Ç']}")

    return "\n".join(result)

# ==== –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Ä–∞—Å–∫–ª–∞–¥ –∏ AI-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è ====
if __name__ == "__main__":
    from ai_interpreter import get_ai_interpretation

    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–∫–ª–∞–¥ –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è (–æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –Ω–∞–±–æ—Ä –∫–∞—Ä—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ AI)
    cards = get_random_cards(data, 3)
    text = get_spread_text(data, "love", cards)
    ai_text = get_ai_interpretation("–†–∞—Å–∫–ª–∞–¥ –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", cards)

    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(text)
    print("\n‚ú® –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞:")
    print(ai_text)
